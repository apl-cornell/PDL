/*
n = 128
void histogram ( int feature [] , float weight [] , float hist [] , int n ) {
    for (int i =0; i < n ; ++ i ) {
        int m = feature [ i ];
        float wt = weight [ i ];
        float x = hist [ m ];
        hist [ m ] = x + wt ;
    }
}
*/

pipe hist(counter: int<10>)[feature: int<10>[10]<a,a>, weight: int<32>[10]<a,a>, h: int<32>[10]<a,a>]: bool {
    if (counter < 1000<10>) {
        call hist(counter + 1<10>);
    start(feature);
    acquire(feature[counter]);
    end(feature);
    start(weight);
    acquire(weight[counter]);
    end(weight);
    int<10> m <- feature[counter];
    int<32> wt <- weight[counter];
    release(feature[counter]);
    release(weight[counter]);
    ---
    start(h);
    acquire(h[m]);
    end(h);
    int<32> oldh <- h[m];
    ---
    h[m] <- oldh + wt;
    release(h[m]);
    ---
    } else {
      output(true);
    }
}

circuit {
    f = memory(int<10>, 10);
    w = memory(int<32>, 10);
    h = memory(int<32>, 10);
    hg = new hist[f, w, h];
    call hg(0<10>);
}