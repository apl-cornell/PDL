exn-pipe cpu(pc :uint<16>)[imem :uint<8>[16]<a,a>, acc :uint<4>[0]<c,s>, oth :uint<4>[0]<c,s>] :uint<4> {
    start(imem);
    uint<8> insn <- imem[pc];
    end(imem);
    ---
    //DECODE
    print("PC: %h", pc);
    print("INSN: %h", insn);
    opcode = insn{7:4};
    imm = insn{3:0};
    done = opcode == 0;
    mult = opcode == 1;
    div = opcode == 2;
    start(acc);
    acc_val = acc[];
    reserve(acc);
    end(acc);
    ---
    if(div){
        if(imm == 0){
            uint<4> err_code = 1;
            except();
        }
    }
    ---
    if (done)
    {
      output acc_val;
    } else
    {
      call cpu(pc + 1);
    }
    ---
commit:
    print("commit");
except():
    print("exn");
    ---
    call cpu(0);
}


circuit {
   ti = memory(uint<8>, 16);
   acc = register(uint<4>, 1);
   c = new cpu[ti, acc, acc];
   call c(u0<16>);
}