

pipe cpu(pc)[rf, imem, dmem] {
:STAGE 1:
recv pc, C_INPUT
send pc, C_imem
send pc, C_12
----------
:STAGE 2:
recv insn, C_imem
recv pc, C_12
op_type = insn{1:0}
op = insn{3:2}
//etc.
send rs1, C_rf_read_1
send rs2, C_rf_read_2
send {pc, op, op_type...} C_23
-----------
:STAGE 3:
recv rs1, C_rf_read_1
recv rs2, C_rf_read_2
recv {pc, op, op_type...} C_23
offset = ...
npc = pc + offset
add_arg2 = (op_type == 0b1) ? arg2 : 0x0<19> ++ imm;
alu_res = alu(arg1, add_arg2, op)
send {npc, op_type, alu_res, ... } C_34
------------------
:STAGE 4:
recv {npc, op_type, alu_res, ...} C_34
if (op_type == 0b10) send alu_res, C_dmem_read
if ((!(op_type == 0b10)) && op_type == 0b11) send {alu_res, arg2}, C_dmem_write
send {npc, op_type,... } C_45
------------------
recv {npc, op_type,...} C_45
if (op_type == 0b10) recv mem_res, C_dmem_read

if (op_type == 0b1) send {rd, alu_res}, C_rf_write
if (!(op_type == 0b1) && op_type = 0b10) send {rd, mem_res}, C_rf_write

send npc, C_51
--------------
}

TODO - should have 1 send per channel X stage. So any given
stage has at most 1 send and at most 1 recv for each channel connected to it.