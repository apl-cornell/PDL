/*
 * Generated by Bluespec Compiler
 * 
 */

/* Generation options: */
#ifndef __mkCircuit_h__
#define __mkCircuit_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkCircuit module */
class MOD_mkCircuit : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_RegFile<tUInt32,tUInt32> INST_f_rf;
  MOD_RegFile<tUInt32,tUInt32> INST_h_rf;
  MOD_Reg<tUInt8> INST_hg;
  MOD_Reg<tUInt8> INST_hg_busyReg;
  MOD_Reg<tUInt32> INST_hg_feature_lock_entryVec_0;
  MOD_Reg<tUInt32> INST_hg_feature_lock_entryVec_1;
  MOD_Reg<tUInt32> INST_hg_feature_lock_entryVec_2;
  MOD_Reg<tUInt32> INST_hg_feature_lock_entryVec_3;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_0_cnt;
  MOD_Fifo<tUInt8> INST_hg_feature_lock_lockVec_0_held;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_0_nextId;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_1_cnt;
  MOD_Fifo<tUInt8> INST_hg_feature_lock_lockVec_1_held;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_1_nextId;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_2_cnt;
  MOD_Fifo<tUInt8> INST_hg_feature_lock_lockVec_2_held;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_2_nextId;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_3_cnt;
  MOD_Fifo<tUInt8> INST_hg_feature_lock_lockVec_3_held;
  MOD_Reg<tUInt8> INST_hg_feature_lock_lockVec_3_nextId;
  MOD_Reg<tUInt8> INST_hg_feature_lock_region;
  MOD_Fifo<tUInt64> INST_hg_fifo_Stage__1_TO_Stage__2;
  MOD_Fifo<tUInt8> INST_hg_fifo_Stage__2_TO_Stage__3;
  MOD_Fifo<tUInt64> INST_hg_fifo_Start_TO_Stage__1;
  MOD_Fifo<tUInt32> INST_hg_fifo__input__TO_Start;
  MOD_Reg<tUInt32> INST_hg_h_lock_entryVec_0;
  MOD_Reg<tUInt32> INST_hg_h_lock_entryVec_1;
  MOD_Reg<tUInt32> INST_hg_h_lock_entryVec_2;
  MOD_Reg<tUInt32> INST_hg_h_lock_entryVec_3;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_0_cnt;
  MOD_Fifo<tUInt8> INST_hg_h_lock_lockVec_0_held;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_0_nextId;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_1_cnt;
  MOD_Fifo<tUInt8> INST_hg_h_lock_lockVec_1_held;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_1_nextId;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_2_cnt;
  MOD_Fifo<tUInt8> INST_hg_h_lock_lockVec_2_held;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_2_nextId;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_3_cnt;
  MOD_Fifo<tUInt8> INST_hg_h_lock_lockVec_3_held;
  MOD_Reg<tUInt8> INST_hg_h_lock_lockVec_3_nextId;
  MOD_Reg<tUInt8> INST_hg_h_lock_region;
  MOD_Fifo<tUInt8> INST_hg_outputQueue;
  MOD_Reg<tUInt32> INST_hg_weight_lock_entryVec_0;
  MOD_Reg<tUInt32> INST_hg_weight_lock_entryVec_1;
  MOD_Reg<tUInt32> INST_hg_weight_lock_entryVec_2;
  MOD_Reg<tUInt32> INST_hg_weight_lock_entryVec_3;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_0_cnt;
  MOD_Fifo<tUInt8> INST_hg_weight_lock_lockVec_0_held;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_0_nextId;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_1_cnt;
  MOD_Fifo<tUInt8> INST_hg_weight_lock_lockVec_1_held;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_1_nextId;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_2_cnt;
  MOD_Fifo<tUInt8> INST_hg_weight_lock_lockVec_2_held;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_2_nextId;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_3_cnt;
  MOD_Fifo<tUInt8> INST_hg_weight_lock_lockVec_3_held;
  MOD_Reg<tUInt8> INST_hg_weight_lock_lockVec_3_nextId;
  MOD_Reg<tUInt8> INST_hg_weight_lock_region;
  MOD_RegFile<tUInt32,tUInt32> INST_w_rf;
 
 /* Constructor */
 public:
  MOD_mkCircuit(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN__inthg_req;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_hg_outputQueue_i_notEmpty____d351;
  tUInt8 DEF_WILL_FIRE__inthg_req;
  tUInt8 DEF_hg_fifo__input__TO_Start_i_notFull____d66;
  tUInt8 DEF_hg_h_lock_entryVec_3_9_BIT_10___d60;
  tUInt8 DEF_hg_h_lock_entryVec_3_9_BITS_9_TO_0_67_EQ_hg_fi_ETC___d285;
  tUInt8 DEF_hg_h_lock_entryVec_2_4_BIT_10___d55;
  tUInt8 DEF_hg_h_lock_entryVec_2_4_BITS_9_TO_0_72_EQ_hg_fi_ETC___d288;
  tUInt8 DEF_hg_h_lock_entryVec_1_9_BIT_10___d50;
  tUInt8 DEF_hg_h_lock_entryVec_1_9_BITS_9_TO_0_75_EQ_hg_fi_ETC___d291;
  tUInt8 DEF_x__h8976;
  tUInt8 DEF_hg_h_lock_entryVec_0_4_BIT_10___d45;
  tUInt8 DEF_hg_h_lock_entryVec_3_9_BIT_10_0_AND_hg_h_lock__ETC___d183;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_0_4_BIT_10_5_90_OR_NOT__ETC___d192;
  tUInt8 DEF_hg_h_lock_entryVec_2_4_BIT_10_5_AND_hg_h_lock__ETC___d174;
  tUInt8 DEF_hg_h_lock_entryVec_1_9_BIT_10_0_AND_hg_h_lock__ETC___d177;
  tUInt8 DEF_hg_h_lock_entryVec_3_9_BIT_10_0_AND_hg_h_lock__ETC___d171;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_3_9_BIT_10_0___d209;
  tUInt8 DEF_hg_h_lock_entryVec_3_9_BITS_9_TO_0_67_EQ_hg_fi_ETC___d170;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_2_4_BIT_10_5___d184;
  tUInt8 DEF_hg_h_lock_entryVec_2_4_BITS_9_TO_0_72_EQ_hg_fi_ETC___d173;
  tUInt8 DEF_hg_h_lock_entryVec_1_9_BITS_9_TO_0_75_EQ_hg_fi_ETC___d176;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_1_9_BIT_10_0___d187;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_0_4_BIT_10_5___d190;
  tUInt8 DEF_hg_weight_lock_entryVec_3_9_BIT_10___d40;
  tUInt8 DEF_hg_weight_lock_entryVec_2_4_BIT_10___d35;
  tUInt8 DEF_hg_weight_lock_entryVec_1_9_BIT_10___d30;
  tUInt8 DEF_hg_feature_lock_entryVec_3_9_BIT_10___d20;
  tUInt8 DEF_hg_feature_lock_entryVec_2_4_BIT_10___d15;
  tUInt8 DEF_hg_feature_lock_entryVec_1_BIT_10___d10;
  tUInt64 DEF_hg_fifo_Stage__1_TO_Stage__2_first____d283;
  tUInt64 DEF_hg_fifo_Start_TO_Stage__1_first____d168;
  tUInt32 DEF_hg_fifo_Start_TO_Stage__1_first__68_BITS_44_TO_35___d169;
  tUInt32 DEF_hg_fifo__input__TO_Start_first__3_BITS_12_TO_3___d64;
  tUInt32 DEF_hg_fifo__input__TO_Start_first____d63;
  tUInt32 DEF_hg_h_lock_entryVec_3___d59;
  tUInt32 DEF_hg_h_lock_entryVec_2___d54;
  tUInt32 DEF_hg_h_lock_entryVec_1___d49;
  tUInt32 DEF_hg_h_lock_entryVec_0___d44;
  tUInt32 DEF_hg_weight_lock_entryVec_3___d39;
  tUInt32 DEF_hg_weight_lock_entryVec_2___d34;
  tUInt32 DEF_hg_weight_lock_entryVec_1___d29;
  tUInt32 DEF_hg_weight_lock_entryVec_0___d24;
  tUInt32 DEF_hg_feature_lock_entryVec_3___d19;
  tUInt32 DEF_hg_feature_lock_entryVec_2___d14;
  tUInt32 DEF_hg_feature_lock_entryVec_1___d9;
  tUInt32 DEF_hg_feature_lock_entryVec_0___d3;
  tUInt8 DEF_hg_busyReg__h7113;
  tUInt8 DEF_x__h10519;
  tUInt8 DEF_x__h9842;
  tUInt32 DEF_hg_fifo_Stage__1_TO_Stage__2_first__83_BITS_47_ETC___d284;
  tUInt32 DEF_b__h8511;
  tUInt32 DEF_b__h8480;
  tUInt32 DEF_b__h8449;
  tUInt32 DEF_b__h8408;
  tUInt8 DEF_hg_weight_lock_entryVec_0_4_BIT_10___d25;
  tUInt8 DEF_hg_feature_lock_entryVec_0_BIT_10___d4;
  tUInt8 DEF_NOT_hg_h_lock_lockVec_0_held_notEmpty__2___d43;
  tUInt8 DEF_NOT_hg_h_lock_lockVec_1_held_notEmpty__7___d48;
  tUInt8 DEF_NOT_hg_h_lock_lockVec_2_held_notEmpty__2___d53;
  tUInt8 DEF_NOT_hg_h_lock_lockVec_3_held_notEmpty__7___d58;
  tUInt8 DEF_NOT_hg_weight_lock_lockVec_0_held_notEmpty__2___d23;
  tUInt8 DEF_NOT_hg_weight_lock_lockVec_1_held_notEmpty__7___d28;
  tUInt8 DEF_NOT_hg_weight_lock_lockVec_2_held_notEmpty__2___d33;
  tUInt8 DEF_NOT_hg_weight_lock_lockVec_3_held_notEmpty__7___d38;
  tUInt8 DEF_NOT_hg_feature_lock_lockVec_0_held_notEmpty___d2;
  tUInt8 DEF_NOT_hg_feature_lock_lockVec_1_held_notEmpty___d8;
  tUInt8 DEF_NOT_hg_feature_lock_lockVec_2_held_notEmpty__2___d13;
  tUInt8 DEF_NOT_hg_feature_lock_lockVec_3_held_notEmpty__7___d18;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_3_9_BIT_10_0_09_OR_NOT__ETC___d226;
  tUInt8 DEF_hg_fifo__input__TO_Start_first__3_BITS_12_TO_3_ETC___d65;
  tUInt8 DEF_hg_h_lock_entryVec_0_4_BITS_9_TO_0_78_EQ_hg_fi_ETC___d294;
  tUInt8 DEF_hg_h_lock_entryVec_0_4_BITS_9_TO_0_78_EQ_hg_fi_ETC___d179;
  tUInt8 DEF_hg_h_lock_entryVec_3_9_BIT_10_0_AND_hg_h_lock__ETC___d300;
  tUInt8 DEF_hg_h_lock_entryVec_2_4_BIT_10_5_AND_hg_h_lock__ETC___d302;
  tUInt8 DEF_hg_h_lock_entryVec_1_9_BIT_10_0_AND_hg_h_lock__ETC___d304;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_0_4_BIT_10_5_90_OR_NOT__ETC___d296;
  tUInt8 DEF_NOT_hg_fifo__input__TO_Start_first__3_BITS_12__ETC___d74;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_2_4_BIT_10_5_84_OR_NOT__ETC___d298;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_1_9_BIT_10_0_87_OR_NOT__ETC___d297;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_2_4_BIT_10_5_84_OR_NOT__ETC___d194;
  tUInt8 DEF_hg_h_lock_entryVec_2_4_BIT_10_5_AND_hg_h_lock__ETC___d207;
  tUInt8 DEF_hg_h_lock_entryVec_1_9_BIT_10_0_AND_hg_h_lock__ETC___d206;
  tUInt8 DEF_NOT_hg_h_lock_entryVec_1_9_BIT_10_0_87_OR_NOT__ETC___d193;
 
 /* Local definitions */
 private:
  tUInt8 DEF_hg_outputQueue_first____d352;
  tUInt32 DEF__0_CONCAT_DONTCARE___d6;
 
 /* Rules */
 public:
  void RL_hg_feature_lock_freelock();
  void RL_hg_feature_lock_freelock_1();
  void RL_hg_feature_lock_freelock_2();
  void RL_hg_feature_lock_freelock_3();
  void RL_hg_weight_lock_freelock();
  void RL_hg_weight_lock_freelock_1();
  void RL_hg_weight_lock_freelock_2();
  void RL_hg_weight_lock_freelock_3();
  void RL_hg_h_lock_freelock();
  void RL_hg_h_lock_freelock_1();
  void RL_hg_h_lock_freelock_2();
  void RL_hg_h_lock_freelock_3();
  void RL_hg_s_Start_execute();
  void RL_hg_s_Stage__1_execute();
  void RL_hg_s_Stage__2_execute();
  void RL_hg_s_Stage__3_execute();
 
 /* Methods */
 public:
  tUInt8 METH__inthg_req(tUInt32 ARG__inthg_req_counter);
  tUInt8 METH_RDY__inthg_req();
  void METH__inthg_resp();
  tUInt8 METH_RDY__inthg_resp();
  tUInt8 METH__inthg_checkHandle(tUInt8 ARG__inthg_checkHandle_handle);
  tUInt8 METH_RDY__inthg_checkHandle();
  tUInt8 METH__inthg_peek();
  tUInt8 METH_RDY__inthg_peek();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCircuit &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkCircuit &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkCircuit &backing);
};

#endif /* ifndef __mkCircuit_h__ */
