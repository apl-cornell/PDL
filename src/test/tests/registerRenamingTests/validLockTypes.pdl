//Expected Success
pipe test1(input: int<32>)[rf: int<32>[5]] {
    int<5> rs1 = input{0:4};
    int<5> rs2 = input{5:9};
    start(rf);
    acquire(rf[rs1], R);
    int<32> arg1 <- rf[rs1];
    acquire(rf[rs2], W);
    rf[rs2] <- 1<32> ;
    release(rf[rs1]);
    release(rf[rs2]);
    end(rf);
}

//Expected Success
pipe test2(input: int<32>)[rf: int<32>[5]] {
    int<5> rs1 = input{0:4};
    int<5> rs2 = input{5:9};
    start(rf);
    if (input{0:0} == 1) {
        acquire(rf[rs1], W);
        rf[rs1] <- 1<32> ;
        release(rf[rs1]);
    }
    acquire(rf[rs2], R);
    int<32> arg2 <- rf[rs2];
    end(rf);
    release(rf[rs2]);
}

pipe test3(input: int<32>)[rf: int<32>[5]<c,s>] {
    int<5> rs1 = input{0:4};
    int<5> rs2 = input{5:9};
    start(rf);
    acquire(rf[rs2], R);
    end(rf);
    int<32> arg2 = rf[rs2] + 4<32>;
    release(rf[rs2]);
}

circuit {
    r = memory(int<32>, 5);
    rf = regfile(int<32>, 5);

}