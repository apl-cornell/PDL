def adder<T>(x :uint<T>, y :uint<T>) :int<T>
{
   return cast(x + y, int<T>);
}

// def multiply_pos<T, U>(x :int<T>, y :int<U>) :bool
// {
//    a = x $* cast(y, int<T>);//doesn't work fully with different widths
//    return a > 0;
// }

pipe test1(input: int<32>)[rf: int<32>[32]] :int<100>
{
   int<100> out = adder(u3<100>, u4<100>);
   output (out);
}

// pipe test2(input: int<32>)[rf: int<32>[32]] :int<100>
// {
//    bool pos = multiply_pos(4<4>, 8<5>);
//    output (1);
// }


circuit {
   r = memory(int<32>, 32);
}