// nested_generic.pdl
def iden<U>(a :int<U>) :int<U>
{
   return a;
}


def adder<T>(x :int<T>, y :int<T>) :int<T>
{
   return x + iden(y);
}

pipe test1(inpt: int<32>)[rf: int<32>[32]] :int<100>
{
   output (adder(3, 4));
}


circuit {
   r = memory(int<32>, 32);
}