//Expected Success
pipe test3(input: int<32>)[rf: int<32>[5], m:int<32>[5]] {
    int<5> rs1 = input{0:4};
    int<5> rs2 = input{5:9};
    start(rf);
    start(m);
    acquire(rf[rs1],R);
    acquire(rf[rs2],W);
    acquire(m[rs1], R);
    end(m);
    end(rf);
    ---
    release(rf[rs1]);
    release(rf[rs2]);
    release(m[rs1]);
    call test3(input);
}

//Tests that modules are analyzed separately
pipe test4(input: int<32>)[rf: int<32>[5], m:int<32>[5]] :bool {
    int<5> rs1 = input{0:4};
    int<5> rs2 = input{5:9};
    start(rf);
    start(m);
    acquire(rf[rs1],R);
    acquire(rf[rs2],W);
    acquire(m[rs1], R);
    end(m);
    end(rf);
    ---
    release(rf[rs1]);
    release(rf[rs2]);
    release(m[rs1]);
    call test3(input);
    output(true);
}

circuit {
    r = memory(int<32>, 5);
    m = memory(int<32>, 5);
}