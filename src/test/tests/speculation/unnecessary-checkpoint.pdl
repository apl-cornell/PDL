// unnecessary-checkpoint.pdl
pipe cpu(pc: int<8>)[rf: int<32>[5]<c4,s1>(CheckpointRF), imem: int<32>[8]<a1,a1>]: bool {
     start(imem);
     int<32> insn <- imem[cast(pc, uint<8>)];
     end(imem);
     ---
     if (insn{31:31} != 1<1>) {
     	  ---
          int<1> op = insn{0:0};
     	  int<8> brImm = 0<4> ++ insn{4:1};
     	  uint<5> rs1 = cast(insn{9:5}, uint<5>);
     	  uint<5> rs2 = cast(insn{14:10}, uint<5>);
     	  uint<5> rd = cast(insn{19:15}, uint<5>);

     	  if (op == 0<1>) {
     	    call cpu(pc + 1<8>);
     	  }
     	  start(rf);
	  checkpoint(rf);
     	  reserve(rf[rs1], R);
     	  reserve(rf[rs2], R);
     	  if (op == 0<1>) {
     	     reserve(rf[rd], W);
     	  }
     	  end(rf);
     	  ---
     	  block(rf[rs1]);
     	  block(rf[rs2]);
     	  if (op != 0<1>) {
       	     int<8> npc = (rf[rs1] == rf[rs2]) ? (pc + brImm) : (pc + 1<8>);
	     print(npc);
	     call cpu(npc);
     	  }
     	  int<32> out = rf[rs1] + rf[rs2];
     	  release(rf[rs1]);
     	  release(rf[rs2]);
    	  ---
     	  if (op == 0<1>) {
             block(rf[rd]);
	     print(out);
             rf[rd] <- out;
             release(rf[rd]);
     	  }
     } else {
       output(true);
     }
}

circuit {
   rename = rflock CheckpointRF(int<32>, 5, 128);
   ti = memory(int<32>, 8);
   t = new cpu[rename,ti];
   call t(0<8>);
}