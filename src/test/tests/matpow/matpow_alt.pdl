/*
void matrix_power( inout_int_t x[20][20], in_int_t row[20], in_int_t col[20], in_int_t a[20] )
{
  for (int k=1; k<20; k++) {
      for (int p=0; p<20; p++) {
            x[k][row[p]] += a[p]*x[k-1][col[p]];
      }
  }
}
*/

pipe matpow(k: int<5>, p: int<5>)[x: int<32>[9]<c,s>, row: int<5>[5]<c,s>, col: int<5>[5]<c,s>, a: int<32>[5]<c,s>]: bool {
     if (p == 19<5>) {
     	if (k != 19<5>) {
	   call matpow(k + 1<5>, 0<5>);
	}
     } else {
       call matpow(k, p + 1<5>);
     }
     start(col);
     acquire(col);
     int<5> col_p = col[p];
     release(col);
     end(col);
     start(row);
     acquire(row);
     int<5> row_p = row[p];
     release(row);
     end(row);
     int<18> x_in_mul = 20<9> * (0<4> ++ (k - 1<5>));
     int<9> x_in_idx = x_in_mul{8:0} + (0<4> ++ col_p);
     int<18> x_out_mul = (20<9> * (0<4> ++ k)); 
     int<9> x_out_idx =  x_out_mul{8:0} + (0<4> ++ row_p);
     int<9> x_out_idx_cp = x_out_idx;
     start(x);
     acquire(x[x_in_idx], READ);
     acquire(x[x_out_idx], READ);
     acquire(x[x_out_idx_cp], WRITE);
     end(x);
     int<32> x_in_val = x[x_in_idx];
     int<32> x_out_val_read = x[x_out_idx];
     release(x[x_in_idx]);
     release(x[x_out_idx]);
     start(a);
     acquire(a);
     int<32> a_val = a[p];
     release(a);
     end(a);
     ---
     int<64> nmul = a_val * x_in_val;
     int<32> nval = x_out_val_read + nmul{31:0};
     print(nval);
     x[x_out_idx_cp] <- nval;
     release(x[x_out_idx_cp]);
     ---
     if ((k == 19<5>) && (p == 19<5>)) {
     	output(true);
     }
}

circuit {
  x = regfile(int<32>, 9);
  a = regfile(int<32>, 5);
  r = regfile(int<5>, 5);
  c = regfile(int<5>, 5);
  mp = new matpow[x, r, c, a];
  call mp(1<5>, 0<5>);
}